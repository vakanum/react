import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';

import nadezhdaImage from '../images/sanatoriy1.jpg';
import napolbaskaImage from '../images/sanatoriy2.jpg';
import zhemchuzhinaImage from '../images/sanatoriy3.jpg';
import zubrenokImage from '../images/sanatoriy4.jpg';
import zhdanovichiImage from '../images/sanatoriy5.jpg';
import serebryanyeKlyuchiImage from '../images/sanatoriy6.jpg';
interface BookingFormData {
  checkIn: string;
  checkOut: string;
  guests: number;
}

const sanatoriums = [
  {
    id: 'nadezhda',
    name: '–°–∞–Ω–∞—Ç–æ—Ä–∏–π "–ù–∞–¥–µ–∂–¥–∞"',
    image: nadezhdaImage,
    description: '–î–†–û–¶ –ù–∞–¥–µ–∂–¥–∞ ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä –¥–ª—è –¥–µ—Ç—Å–∫–æ–≥–æ –∏ —Å–µ–º–µ–π–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤ –∂–∏–≤–æ–ø–∏—Å–Ω–æ–º —Å–æ—Å–Ω–æ–≤–æ–º –±–æ—Ä—É —É –í–∏–ª–µ–π—Å–∫–æ–≥–æ –≤–æ–¥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–∞. –ó–¥–µ—Å—å —Å–æ–∑–¥–∞–Ω—ã –≤—Å–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è.',
    info: '–î–†–û–¶ –ù–∞–¥–µ–∂–¥–∞ ‚Äî –û–±—â–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:',
    details: '–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è ‚Äî 1984 (—Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚Äî 2016). –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –≤—ã—Å—à–∞—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 232. –ü–ª–æ—â–∞–¥—å: 12 –≥–∞. –í –Ω–∞–ª–∏—á–∏–∏ –±–∞—Å—Å–µ–π–Ω, —Å–ø–æ—Ä—Ç–∑–∞–ª, –∏–≥—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –∫–∏–Ω–æ–∑–∞–ª, Wi-Fi.',
    stats: [
      { icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', label: '–ö–æ–ª-–≤–æ –º–µ—Å—Ç', value: '232' },
      { icon: 'üìÖ', label: '–ö–æ–ª-–≤–æ –¥–Ω–µ–π', value: '12-24' },
      { icon: 'üí∏', label: '–¶–µ–Ω–∞ (—Å—É—Ç–∫–∏, 1 —á–µ–ª.)', value: '–æ—Ç 50 BYN' },
    ],
  },
  {
    id: 'napolbaska',
    name: '–°–∞–Ω–∞—Ç–æ—Ä–∏–π "–ù–∞–ø–æ–ª–±–∞—Å–∫–∞—è –ü—É—â–∞"',
    image: napolbaskaImage,
    description: '–ù–∞–ø–æ–ª–±–∞—Å–∫–∞—è –ü—É—â–∞ ‚Äî —É—é—Ç–Ω—ã–π —Å–∞–Ω–∞—Ç–æ—Ä–∏–π –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –≤–µ–∫–æ–≤—ã—Ö —Å–æ—Å–µ–Ω. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ –∏ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏ –¥–µ—Ç–µ–π. –ù–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ ‚Äî –æ–∑–µ—Ä–æ, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, –º–∏–Ω–∏-–∑–æ–æ–ø–∞—Ä–∫.',
    info: '–ù–∞–ø–æ–ª–±–∞—Å–∫–∞—è –ü—É—â–∞ ‚Äî –û–±—â–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:',
    details: '–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è ‚Äî 1992. –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ø–µ—Ä–≤–∞—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 180. –ü–ª–æ—â–∞–¥—å: 10 –≥–∞. –í –Ω–∞–ª–∏—á–∏–∏ –±–∞—Å—Å–µ–π–Ω, —Å–ø–æ—Ä—Ç–∑–∞–ª, –º–∏–Ω–∏-–∑–æ–æ–ø–∞—Ä–∫, Wi-Fi.',
    stats: [
      { icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', label: '–ö–æ–ª-–≤–æ –º–µ—Å—Ç', value: '180' },
      { icon: 'üìÖ', label: '–ö–æ–ª-–≤–æ –¥–Ω–µ–π', value: '10-21' },
      { icon: 'üí∏', label: '–¶–µ–Ω–∞ (—Å—É—Ç–∫–∏, 1 —á–µ–ª.)', value: '–æ—Ç 45 BYN' },
    ],
  },
  {
    id: 'zhemchuzhina',
    name: '–°–∞–Ω–∞—Ç–æ—Ä–∏–π "–ñ–µ–º—á—É–∂–∏–Ω–∞"',
    image: zhemchuzhinaImage,
    description: '–ñ–µ–º—á—É–∂–∏–Ω–∞ ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∞–Ω–∞—Ç–æ—Ä–∏–π –Ω–∞ –±–µ—Ä–µ–≥—É –æ–∑–µ—Ä–∞. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è, –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –ø—Ä–∏—Ä–æ–¥–æ–π –∏ –∞–∫—Ç–∏–≤–Ω—ã–º –æ—Ç–¥—ã—Ö–æ–º.',
    info: '–ñ–µ–º—á—É–∂–∏–Ω–∞ ‚Äî –û–±—â–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:',
    details: '–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è ‚Äî 2001. –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –≤—ã—Å—à–∞—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 210. –ü–ª–æ—â–∞–¥—å: 15 –≥–∞. –í –Ω–∞–ª–∏—á–∏–∏ –±–∞—Å—Å–µ–π–Ω, —Ç—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ª, —Ç–µ–Ω–Ω–∏—Å–Ω—ã–µ –∫–æ—Ä—Ç—ã, Wi-Fi.',
    stats: [
      { icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', label: '–ö–æ–ª-–≤–æ –º–µ—Å—Ç', value: '210' },
      { icon: 'üìÖ', label: '–ö–æ–ª-–≤–æ –¥–Ω–µ–π', value: '14-28' },
      { icon: 'üí∏', label: '–¶–µ–Ω–∞ (—Å—É—Ç–∫–∏, 1 —á–µ–ª.)', value: '–æ—Ç 60 BYN' },
    ],
  },
  {
    id: 'zubrenok',
    name: '–°–∞–Ω–∞—Ç–æ—Ä–∏–π "–ó—É–±—Ä—ë–Ω–æ–∫"',
    image: zubrenokImage,
    description: '–ó—É–±—Ä—ë–Ω–æ–∫ ‚Äî –¥–µ—Ç—Å–∫–∏–π —Å–∞–Ω–∞—Ç–æ—Ä–∏–π —Å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è. –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç–æ–º —Ä–∞–π–æ–Ω–µ.',
    info: '–ó—É–±—Ä—ë–Ω–æ–∫ ‚Äî –û–±—â–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:',
    details: '–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è ‚Äî 1988. –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –≤—ã—Å—à–∞—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 250. –ü–ª–æ—â–∞–¥—å: 13 –≥–∞. –í –Ω–∞–ª–∏—á–∏–∏ –±–∞—Å—Å–µ–π–Ω, —Å–ø–æ—Ä—Ç–∑–∞–ª, –∫—Ä—É–∂–∫–∏, Wi-Fi.',
    stats: [
      { icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', label: '–ö–æ–ª-–≤–æ –º–µ—Å—Ç', value: '250' },
      { icon: 'üìÖ', label: '–ö–æ–ª-–≤–æ –¥–Ω–µ–π', value: '14-21' },
      { icon: 'üí∏', label: '–¶–µ–Ω–∞ (—Å—É—Ç–∫–∏, 1 —á–µ–ª.)', value: '–æ—Ç 55 BYN' },
    ],
  },
  {
    id: 'zhdanovichi',
    name: '–°–∞–Ω–∞—Ç–æ—Ä–∏–π "–ñ–¥–∞–Ω–æ–≤–∏—á–∏"',
    image: zhdanovichiImage,
    description: '–ñ–¥–∞–Ω–æ–≤–∏—á–∏ ‚Äî —Å–∞–Ω–∞—Ç–æ—Ä–∏–π –¥–ª—è –≤—Å–µ–π —Å–µ–º—å–∏ —Å —Ä–∞–∑–≤–∏—Ç–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏. –ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤–±–ª–∏–∑–∏ –ú–∏–Ω—Å–∫–∞.',
    info: '–ñ–¥–∞–Ω–æ–≤–∏—á–∏ ‚Äî –û–±—â–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:',
    details: '–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è ‚Äî 1995. –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ø–µ—Ä–≤–∞—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 170. –ü–ª–æ—â–∞–¥—å: 9 –≥–∞. –í –Ω–∞–ª–∏—á–∏–∏ –±–∞—Å—Å–µ–π–Ω, —Å–ø–æ—Ä—Ç–∑–∞–ª, –¥–µ—Ç—Å–∫–∏–µ –ø–ª–æ—â–∞–¥–∫–∏, Wi-Fi.',
    stats: [
      { icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', label: '–ö–æ–ª-–≤–æ –º–µ—Å—Ç', value: '170' },
      { icon: 'üìÖ', label: '–ö–æ–ª-–≤–æ –¥–Ω–µ–π', value: '10-20' },
      { icon: 'üí∏', label: '–¶–µ–Ω–∞ (—Å—É—Ç–∫–∏, 1 —á–µ–ª.)', value: '–æ—Ç 48 BYN' },
    ],
  },
  {
    id: 'serebryanye-klyuchi',
    name: '–°–∞–Ω–∞—Ç–æ—Ä–∏–π "–°–µ—Ä–µ–±—Ä—è–Ω—ã–µ –ö–ª—é—á–∏"',
    image: serebryanyeKlyuchiImage,
    description: '–°–µ—Ä–µ–±—Ä—è–Ω—ã–µ –ö–ª—é—á–∏ ‚Äî —Å–∞–Ω–∞—Ç–æ—Ä–∏–π –≤ –ª–µ—Å–Ω–æ–º –º–∞—Å—Å–∏–≤–µ —Å –º–∏–Ω–µ—Ä–∞–ª—å–Ω—ã–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏. –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ –∏ –ª–µ—á–µ–Ω–∏—è.',
    info: '–°–µ—Ä–µ–±—Ä—è–Ω—ã–µ –ö–ª—é—á–∏ ‚Äî –û–±—â–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:',
    details: '–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è ‚Äî 2005. –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –≤—ã—Å—à–∞—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: 140. –ü–ª–æ—â–∞–¥—å: 8 –≥–∞. –í –Ω–∞–ª–∏—á–∏–∏ –±–∞—Å—Å–µ–π–Ω, –ª–µ—á–µ–±–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã, Wi-Fi.',
    stats: [
      { icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', label: '–ö–æ–ª-–≤–æ –º–µ—Å—Ç', value: '140' },
      { icon: 'üìÖ', label: '–ö–æ–ª-–≤–æ –¥–Ω–µ–π', value: '12-18' },
      { icon: 'üí∏', label: '–¶–µ–Ω–∞ (—Å—É—Ç–∫–∏, 1 —á–µ–ª.)', value: '–æ—Ç 52 BYN' },
    ],
  },
];

const SanatoriumPage: React.FC = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [showBookingForm, setShowBookingForm] = useState(false);
  const [bookingData, setBookingData] = useState<BookingFormData>({
    checkIn: '',
    checkOut: '',
    guests: 1,
  });

  const san = sanatoriums.find(s => s.id === id) || sanatoriums[0];

  const getMinMaxDays = (daysStr: string) => {
    const [min, max] = daysStr.split('-').map(Number);
    return { min, max };
  };
  const getPricePerDay = (priceStr: string) => {
    const match = priceStr.match(/(\d+)/);
    return match ? Number(match[1]) : 0;
  };
  const daysRange = getMinMaxDays(san.stats.find(s => s.label === '–ö–æ–ª-–≤–æ –¥–Ω–µ–π')?.value || '1-1');
  const pricePerDay = getPricePerDay(san.stats.find(s => s.label.includes('–¶–µ–Ω–∞'))?.value || '0');
  const [totalPrice, setTotalPrice] = useState(0);
  const [dateError, setDateError] = useState('');

  useEffect(() => {
    if (bookingData.checkIn && bookingData.checkOut) {
      const d1 = new Date(bookingData.checkIn);
      const d2 = new Date(bookingData.checkOut);
      const days = Math.max(1, Math.ceil((d2.getTime() - d1.getTime()) / (1000 * 60 * 60 * 24)));
      if (days < daysRange.min || days > daysRange.max) {
        setDateError(`–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—Ç ${daysRange.min} –¥–æ ${daysRange.max} –¥–Ω–µ–π –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.`);
      } else {
        setDateError('');
      }
    } else {
      setDateError('');
    }
  }, [bookingData, daysRange]);

  useEffect(() => {
    if (bookingData.checkIn && bookingData.checkOut) {
      const d1 = new Date(bookingData.checkIn);
      const d2 = new Date(bookingData.checkOut);
      const days = Math.max(1, Math.ceil((d2.getTime() - d1.getTime()) / (1000 * 60 * 60 * 24)));
      setTotalPrice(days * pricePerDay * bookingData.guests);
    } else {
      setTotalPrice(0);
    }
  }, [bookingData, pricePerDay]);

  const handleBookingSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –ø—É—Ç—ë–≤–∫—É –≤ localStorage
    const newBooking = {
      id: san.id,
      sanatoriumName: san.name,
      checkIn: bookingData.checkIn,
      checkOut: bookingData.checkOut,
      guests: bookingData.guests,
    };
    localStorage.setItem('newBooking', JSON.stringify(newBooking));
    navigate('/profile');
  };

  return (
    <div className="container mx-auto px-1 sm:px-2 md:px-4 py-4 sm:py-8">
      <div className="flex flex-col md:flex-row gap-6 mb-6 items-center md:items-stretch h-full">
        <img src={san.image} alt={san.name} className="w-full max-w-xs md:max-w-sm rounded-lg shadow mx-auto h-full object-cover" />
        <div className="flex-1 w-full flex flex-col justify-between h-full p-2 md:p-4 bg-white dark:bg-gray-800 rounded-lg">
          <h1 className="text-2xl sm:text-3xl md:text-4xl font-bold mb-2 text-left text-gray-900 dark:text-white">{san.name}</h1>
          <p className="mb-2 text-gray-500 dark:text-gray-300 text-sm sm:text-base">{san.description}</p>
          <div className="font-semibold mb-1 text-gray-800 dark:text-gray-200">{san.info}</div>
          <p className="mb-4 text-xs sm:text-sm text-gray-700 dark:text-gray-200">{san.details}</p>
          <div className="flex gap-4 mb-4 flex-wrap">
            <div className="flex items-center gap-2 text-xs sm:text-sm bg-gray-100 dark:bg-gray-700 rounded-lg px-4 py-2">
              <span className="text-2xl">üë®‚Äçüë©‚Äçüëß‚Äçüë¶</span>
              <span className="font-medium">–ú–µ—Å—Ç:</span>
              <span>{san.stats.find(s => s.label === '–ö–æ–ª-–≤–æ –º–µ—Å—Ç')?.value}</span>
            </div>
            <div className="flex items-center gap-2 text-xs sm:text-sm bg-gray-100 dark:bg-gray-700 rounded-lg px-4 py-2">
              <span className="text-2xl">üìÖ</span>
              <span className="font-medium">–î–Ω–µ–π:</span>
              <span>{san.stats.find(s => s.label === '–ö–æ–ª-–≤–æ –¥–Ω–µ–π')?.value}</span>
            </div>
            <div className="flex items-center gap-2 text-xs sm:text-sm bg-gray-100 dark:bg-gray-700 rounded-lg px-4 py-2">
              <span className="text-2xl">üí∏</span>
              <span className="font-medium">–¶–µ–Ω–∞/—Å—É—Ç–∫–∏:</span>
              <span>{pricePerDay} BYN</span>
            </div>
          </div>
          <button 
            onClick={() => setShowBookingForm(true)}
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded transition font-semibold text-base w-fit self-start mt-auto"
          >
            –û—Ñ–æ—Ä–º–∏—Ç—å –ø—É—Ç—ë–≤–∫—É
          </button>
        </div>
      </div>

      {/* Booking Form Modal */}
      {showBookingForm && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white dark:bg-gray-800 rounded-lg p-6 w-full max-w-md">
            <div className="flex justify-between items-center mb-4">
              <h2 className="text-xl font-bold text-gray-900 dark:text-white">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—É—Ç—ë–≤–∫–∏</h2>
              <button
                onClick={() => setShowBookingForm(false)}
                className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200"
              >
                <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>

            <form onSubmit={handleBookingSubmit} className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                  –î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞
                </label>
                <input
                  type="date"
                  required
                  min={new Date().toISOString().split('T')[0]}
                  className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
                  value={bookingData.checkIn}
                  onChange={(e) => setBookingData({ ...bookingData, checkIn: e.target.value })}
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                  –î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞
                </label>
                <input
                  type="date"
                  required
                  min={bookingData.checkIn || new Date().toISOString().split('T')[0]}
                  className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
                  value={bookingData.checkOut}
                  onChange={(e) => setBookingData({ ...bookingData, checkOut: e.target.value })}
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π
                </label>
                <div className="flex items-center gap-2">
                  <button
                    type="button"
                    className="px-3 py-1 bg-gray-200 dark:bg-gray-600 rounded text-lg font-bold"
                    onClick={() => setBookingData(data => ({ ...data, guests: Math.max(1, data.guests - 1) }))}
                    aria-label="–£–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π"
                  >-</button>
                  <span className="min-w-[2.5em] text-center text-base">{bookingData.guests}</span>
                  <button
                    type="button"
                    className="px-3 py-1 bg-gray-200 dark:bg-gray-600 rounded text-lg font-bold"
                    onClick={() => setBookingData(data => ({ ...data, guests: Math.min(500, data.guests + 1) }))}
                    aria-label="–£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π"
                  >+</button>
                </div>
              </div>
              {dateError && (
                <div className="text-red-600 text-sm text-center mb-2">{dateError}</div>
              )}
              {totalPrice > 0 && (
                <div className="text-lg font-semibold text-center text-blue-700 dark:text-blue-300 mb-2">
                  –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {totalPrice} BYN
                </div>
              )}
              <button
                type="submit"
                className="w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition"
                disabled={!!dateError}
              >
                –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
              </button>
            </form>
          </div>
        </div>
      )}
    </div>
  );
};

export default SanatoriumPage; 